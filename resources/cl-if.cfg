Include cl-common.cfg

Style InterfaceOnly

#imports for all generated java files
Import java.nio.IntBuffer

ClassJavadoc CL /**
ClassJavadoc CL  * Java bindings to OpenCL, the Open Computing Language.
ClassJavadoc CL  * @autor Michael Bien
ClassJavadoc CL  */
JavaClass CL

#ignore cl-gl interoperability funcions. Interface 'CL' is pure OpenCL.
Ignore CL_GL_.*|cl.*GL.*

#custom implementations
Ignore clCreateContext
CustomJavaCode CL
CustomJavaCode CL  /** Interface to C language function: <br> <code> cl_context clCreateContext(intptr_t * , uint32_t, cl_device_id * , void (*pfn_notify)(const char *, const void *, size_t, void *), void *, int32_t * ); </code>    */
CustomJavaCode CL  public long clCreateContext(IntBuffer properties, int properties_offset, long[] devices, CreateContextCallback pfn_notify, Object userData, IntBuffer errcode_ret, int errcode_offset);

Ignore clCreateContextFromType
CustomJavaCode CL
CustomJavaCode CL  /** Interface to C language function: <br> <code> cl_context clCreateContextFromType(cl_context_properties *properties, cl_device_type device_type, void (*pfn_notify)(const char *errinfo,  const void *private_info, size_t cb, void *user_data), void *user_data, cl_int *errcode_ret) ; </code>    */
CustomJavaCode CL  public long clCreateContextFromType(IntBuffer properties, int properties_offset, long device_type, CreateContextCallback pfn_notify, Object userData, IntBuffer errcode_ret, int errcode_offset);

Ignore clBuildProgram
CustomJavaCode CL
CustomJavaCode CL  /** Interface to C language function: <br> <code> int32_t clBuildProgram(cl_program, uint32_t, cl_device_id * , const char * , void (*pfn_notify)(cl_program, void *user_data), void * ); </code>    */
CustomJavaCode CL  public int clBuildProgram(long program, long[] devices, String options, BuildProgramCallback cb, Object userData);

Ignore clEnqueueNativeKernel
#TODO..

